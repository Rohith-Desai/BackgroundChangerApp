plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
   // id 'kotlin-android'
   // id 'kotlin-android-extensions'

    id 'com.huawei.agconnect'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {

        applicationId "com.hs.photo.background.changer.editor.backgrounderaser"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 11
        versionName "11.0.0"
        resConfigs "en", "fr"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
        //abiFilters "armeabi-v7a"
        configurations.all {
            resolutionStrategy {
                force 'androidx.browser:browser:1.3.0'
            }
        }
        configurations.all {
            resolutionStrategy { force 'androidx.work:work-runtime:2.6.0' }
        }

    }
    repositories {
        jcenter()

        maven {
            url  "https://adcolony.bintray.com/AdColony"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
        preDexLibraries true
        dexInProcess = true
    }
    /*aaptOptions {
        noCompress "tflite"
    }*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    /*configurations {
        all*.exclude group: 'com.android.support', module: 'support-v4'
    }*/
    /*configurations.all {
        resolutionStrategy {
            force "com.google.android.gms:play-services-base:16.1.0"
            force "com.google.android.gms:play-services-gcm:16.1.0"
            force "com.google.android.gms:play-services-ads:17.2.0" } }*/
/*
    flavorDimensions "tfliteInference"
    productFlavors {

        // The TFLite inference is built using the TFLite Java interpreter.
        interpreter {
            dimension "tfliteInference"
        }
        // Default: The TFLite inference is built using the TFLite Task library (high-level API).
        taskApi {
            getIsDefault().set(true)
            dimension "tfliteInference"
        }

    }*/
    /*lintOptions {
        abortOnError false
    }*/
}
//project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'

//apply from: 'download.gradle'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //interpreterImplementation project(":lib_interpreter")
    //taskApiImplementation project(":lib_task_api")
    //implementation project(":lib_utils")
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.guava:guava:28.2-android'
    implementation 'com.airbnb.android:lottie:3.5.0'
    implementation group: 'androidx.multidex', name: 'multidex', version: '2.0.1'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
   // implementation 'com.github.yalantis:ucrop:2.2.6-native'
    implementation 'com.github.yalantis:ucrop:2.2.7'
    implementation 'com.github.yukuku:ambilwarna:2.0.1'
    implementation 'com.huawei.agconnect:agconnect-core:1.6.5.300'
    implementation 'com.huawei.hms:ml-computer-vision-segmentation:3.5.0.300'
    //Image Segmentation Human Body Model
    implementation 'com.huawei.hms:ml-computer-vision-image-segmentation-body-model:3.5.0.300'
    implementation 'info.androidhive:imagefilters:1.0.7'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    implementation 'com.stepstone.apprating:app-rating:2.3.1'
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android:gpuimage:2.1.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation 'com.google.guava:guava:28.2-android'
    implementation 'com.google.android.gms:play-services-ads:20.6.0'
    implementation 'com.google.firebase:firebase-config:21.1.1'
    implementation 'com.google.firebase:firebase-analytics:21.1.0'
    implementation 'com.google.android.play:core:1.10.3'

    implementation 'com.facebook.android:facebook-android-sdk:8.1.0'

     def lifecycle_version = "2.0.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
}